name: Update Archive Data

on:
  # 매일 오전 8:00 KST (UTC 23:00 전날) - 뉴스레터 발송 후 10분 뒤
  schedule:
    - cron: '0 23 * * 0-4'  # 평일만 (일-목요일 UTC 23:00 = 월-금요일 KST 08:00)

  # 수동 실행 가능
  workflow_dispatch:

  # daily-newsletter 워크플로우 완료 시 자동 실행
  workflow_run:
    workflows: ["Daily Stock Newsletter"]
    types:
      - completed

jobs:
  update-archive:
    runs-on: ubuntu-latest

    # daily-newsletter가 성공했을 때만 실행 (workflow_run 트리거인 경우)
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update archive data from Supabase
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        run: |
          echo "📊 Supabase에서 아카이브 데이터 조회 중..."
          npx tsx scripts/update-archive-data.ts

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet app/archive/_archive-data/archives.json; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️  변경 사항 없음"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "✅ 변경 사항 감지됨"
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add app/archive/_archive-data/archives.json
          git commit -m "chore: update archive data [skip ci]

          📅 Updated at: $(TZ=Asia/Seoul date '+%Y-%m-%d %H:%M:%S %Z')
          🤖 Automated update by GitHub Actions"
          git push

      - name: Notify on success
        if: success()
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "✅ 아카이브 데이터 업데이트 완료!"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

      - name: Notify on failure
        if: failure()
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "❌ 아카이브 데이터 업데이트 실패!"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
